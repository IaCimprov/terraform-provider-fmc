name: Run linter and unit test
on:
  push:
    branches: "**"
#       - 'main'
#       - 'releases/**'
#       - 'feature/**'
    tags:
      - 'v*'
#   pull_request:
#     types:
#       - opened
#------------------------------------------------------------------------------------------------
#   schedule:
#     #        ┌───────────── minute (0 - 59)
#     #        │  ┌───────────── hour (0 - 23)
#     #        │  │ ┌───────────── day of the month (1 - 31)
#     #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
#     #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
#     #        │  │ │ │ │
#     #        │  │ │ │ │
#     #        │  │ │ │ │
#     #        *  * * * *
#     - cron: '30 1 * * 0'

jobs:

# CodeQL Analysis

  check-go-code:
    runs-on: ubuntu-latest
    
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - 
        name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go
          
      - 
        name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - 
        name: Perform CodeQL Analysis

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: "/home/runner/work/terraform-provider-fmc/results/go.sarif"
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: tool

#Trivy, comprehensive and versatile security scanner

  trivy:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

# Run go tests

  gotests:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      -
        name: tests
        run: cd fmc && go test -v

